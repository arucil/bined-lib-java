/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.dhex.example;

import java.awt.BorderLayout;
import org.exbin.dhex.deltahex.CaretPosition;
import org.exbin.dhex.deltahex.component.Hexadecimal;

/**
 * Hexadecimal editor example panel.
 *
 * @version 0.1.0 2016/04/09
 * @author ExBin Project (http://exbin.org)
 */
public class DeltaHexExamplePanel extends javax.swing.JPanel {

    private Hexadecimal hexadecimal;

    public DeltaHexExamplePanel() {
        initComponents();
    }

    public void setHexadecimal(final Hexadecimal hexadecimal) {
        this.hexadecimal = hexadecimal;
        add(hexadecimal, BorderLayout.CENTER);
        viewModeModeComboBox.setSelectedIndex(hexadecimal.getViewMode().ordinal());
        charRenderingComboBox.setSelectedIndex(hexadecimal.getCharRenderingMode().ordinal());
        verticalScrollModeComboBox.setSelectedIndex(hexadecimal.getVerticalScrollMode().ordinal());
        horizontalScrollModeComboBox.setSelectedIndex(hexadecimal.getHorizontalScrollMode().ordinal());
        showLineNumbersCheckBox.setSelected(hexadecimal.isShowLineNumbers());
        showHeaderCheckBox.setSelected(hexadecimal.isShowHeader());
        editableCheckBox.setSelected(hexadecimal.isEditable());
        wrapModeCheckBox.setSelected(hexadecimal.isWrapMode());
        bytesPerLineSpinner.setValue(hexadecimal.getBytesPerLine());
        hexadecimal.addCaretMovedListener(new Hexadecimal.CaretMovedListener() {
            @Override
            public void caretMoved(CaretPosition caretPosition, Hexadecimal.Section section) {
                cursorPositionTextField.setText(String.valueOf(caretPosition.getDataPosition()));
                cursorPositionCheckBox.setSelected(caretPosition.isLowerHalf());
            }
        });
        hexadecimal.addSelectionChangedListener(new Hexadecimal.SelectionChangedListener() {
            @Override
            public void selectionChanged(Hexadecimal.SelectionRange selection) {
                if (selection != null) {
                    CaretPosition selectionFirst = hexadecimal.getSelection().getSelectionFirst();
                    selectionFirstTextField.setText(String.valueOf(selectionFirst.getDataPosition()));
                    selectionFirstCheckBox.setSelected(selectionFirst.isLowerHalf());
                    CaretPosition selectionLast = hexadecimal.getSelection().getSelectionLast();
                    selectionLastTextField.setText(String.valueOf(selectionLast.getDataPosition()));
                    selectionLastCheckBox.setSelected(selectionLast.isLowerHalf());
                } else {
                    selectionFirstTextField.setText("");
                    selectionFirstCheckBox.setSelected(false);
                    selectionLastTextField.setText("");
                    selectionLastCheckBox.setSelected(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        settingsPanel = new javax.swing.JPanel();
        viewModeScrollModeLabel = new javax.swing.JLabel();
        viewModeModeComboBox = new javax.swing.JComboBox<>();
        charRenderingScrollModeLabel = new javax.swing.JLabel();
        charRenderingComboBox = new javax.swing.JComboBox<>();
        showHeaderCheckBox = new javax.swing.JCheckBox();
        showLineNumbersCheckBox = new javax.swing.JCheckBox();
        editableCheckBox = new javax.swing.JCheckBox();
        wrapModeCheckBox = new javax.swing.JCheckBox();
        bytesPerLineLabel = new javax.swing.JLabel();
        bytesPerLineSpinner = new javax.swing.JSpinner();
        verticalScrollModeLabel = new javax.swing.JLabel();
        verticalScrollModeComboBox = new javax.swing.JComboBox<>();
        horizontalScrollModeLabel = new javax.swing.JLabel();
        horizontalScrollModeComboBox = new javax.swing.JComboBox<>();
        cursorPositionLabel = new javax.swing.JLabel();
        cursorPositionTextField = new javax.swing.JTextField();
        cursorPositionCheckBox = new javax.swing.JCheckBox();
        selectionPositionsLabel = new javax.swing.JLabel();
        selectionFirstTextField = new javax.swing.JTextField();
        selectionFirstCheckBox = new javax.swing.JCheckBox();
        selectionLastTextField = new javax.swing.JTextField();
        selectionLastCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        viewModeScrollModeLabel.setText("View Mode");

        viewModeModeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HEXADECIMAL", "PREVIEW", "DUAL" }));
        viewModeModeComboBox.setSelectedIndex(2);
        viewModeModeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewModeModeComboBoxActionPerformed(evt);
            }
        });

        charRenderingScrollModeLabel.setText("Character Rendering");

        charRenderingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AUTO", "DYNAMIC", "FIXED" }));
        charRenderingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charRenderingComboBoxActionPerformed(evt);
            }
        });

        showHeaderCheckBox.setText("Show Header");
        showHeaderCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                showHeaderCheckBoxStateChanged(evt);
            }
        });

        showLineNumbersCheckBox.setText("Show Line Numbers");
        showLineNumbersCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                showLineNumbersCheckBoxStateChanged(evt);
            }
        });

        editableCheckBox.setSelected(true);
        editableCheckBox.setText("Editable");
        editableCheckBox.setEnabled(false);
        editableCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                editableCheckBoxStateChanged(evt);
            }
        });

        wrapModeCheckBox.setText("Wrap Mode");
        wrapModeCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                wrapModeCheckBoxStateChanged(evt);
            }
        });

        bytesPerLineLabel.setText("Bytes Per Line");

        bytesPerLineSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bytesPerLineSpinnerStateChanged(evt);
            }
        });

        verticalScrollModeLabel.setText("Vertical Scroll Mode");

        verticalScrollModeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "PER_LINE", "PIXEL" }));
        verticalScrollModeComboBox.setSelectedIndex(1);
        verticalScrollModeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verticalScrollModeComboBoxActionPerformed(evt);
            }
        });

        horizontalScrollModeLabel.setText("Horizontal Scroll Mode");

        horizontalScrollModeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "PER_CHAR", "PIXEL" }));
        horizontalScrollModeComboBox.setEnabled(false);
        horizontalScrollModeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horizontalScrollModeComboBoxActionPerformed(evt);
            }
        });

        cursorPositionLabel.setText("Cursor Position");

        cursorPositionTextField.setEditable(false);

        cursorPositionCheckBox.setText("Half");
        cursorPositionCheckBox.setEnabled(false);

        selectionPositionsLabel.setText("Selection Start/End");

        selectionFirstTextField.setEditable(false);

        selectionFirstCheckBox.setText("Half");
        selectionFirstCheckBox.setEnabled(false);

        selectionLastTextField.setEditable(false);

        selectionLastCheckBox.setText("Half");
        selectionLastCheckBox.setEnabled(false);

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showLineNumbersCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editableCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wrapModeCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(settingsPanelLayout.createSequentialGroup()
                                .addComponent(cursorPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cursorPositionCheckBox))
                            .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(settingsPanelLayout.createSequentialGroup()
                                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(verticalScrollModeLabel)
                                        .addComponent(verticalScrollModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(horizontalScrollModeLabel)
                                        .addComponent(horizontalScrollModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(showHeaderCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(settingsPanelLayout.createSequentialGroup()
                                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(viewModeScrollModeLabel)
                                        .addComponent(viewModeModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(charRenderingScrollModeLabel)
                                        .addComponent(charRenderingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(bytesPerLineLabel)
                            .addComponent(bytesPerLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cursorPositionLabel)
                            .addComponent(selectionPositionsLabel)
                            .addGroup(settingsPanelLayout.createSequentialGroup()
                                .addComponent(selectionFirstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectionFirstCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(selectionLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectionLastCheckBox)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addComponent(viewModeScrollModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewModeModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addComponent(charRenderingScrollModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charRenderingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showHeaderCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showLineNumbersCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editableCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wrapModeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bytesPerLineLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bytesPerLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cursorPositionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cursorPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cursorPositionCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectionPositionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectionFirstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectionFirstCheckBox)
                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectionLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectionLastCheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addComponent(horizontalScrollModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horizontalScrollModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addComponent(verticalScrollModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verticalScrollModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        add(settingsPanel, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    private void viewModeModeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewModeModeComboBoxActionPerformed
        hexadecimal.setViewMode(Hexadecimal.ViewMode.values()[viewModeModeComboBox.getSelectedIndex()]);
    }//GEN-LAST:event_viewModeModeComboBoxActionPerformed

    private void showHeaderCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_showHeaderCheckBoxStateChanged
        hexadecimal.setShowHeader(showHeaderCheckBox.isSelected());
    }//GEN-LAST:event_showHeaderCheckBoxStateChanged

    private void showLineNumbersCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_showLineNumbersCheckBoxStateChanged
        hexadecimal.setShowLineNumbers(showLineNumbersCheckBox.isSelected());
    }//GEN-LAST:event_showLineNumbersCheckBoxStateChanged

    private void editableCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_editableCheckBoxStateChanged
        hexadecimal.setEditable(editableCheckBox.isSelected());
    }//GEN-LAST:event_editableCheckBoxStateChanged

    private void wrapModeCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_wrapModeCheckBoxStateChanged
        hexadecimal.setWrapMode(wrapModeCheckBox.isSelected());
    }//GEN-LAST:event_wrapModeCheckBoxStateChanged

    private void bytesPerLineSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bytesPerLineSpinnerStateChanged
        int value = (Integer) bytesPerLineSpinner.getValue();
        if (value > 0) {
            hexadecimal.setBytesPerLine(value);
        }
    }//GEN-LAST:event_bytesPerLineSpinnerStateChanged

    private void verticalScrollModeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verticalScrollModeComboBoxActionPerformed
        hexadecimal.setVerticalScrollMode(Hexadecimal.VerticalScrollMode.values()[verticalScrollModeComboBox.getSelectedIndex()]);
    }//GEN-LAST:event_verticalScrollModeComboBoxActionPerformed

    private void horizontalScrollModeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horizontalScrollModeComboBoxActionPerformed
        hexadecimal.setHorizontalScrollMode(Hexadecimal.HorizontalScrollMode.values()[horizontalScrollModeComboBox.getSelectedIndex()]);
    }//GEN-LAST:event_horizontalScrollModeComboBoxActionPerformed

    private void charRenderingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charRenderingComboBoxActionPerformed
        hexadecimal.setCharRenderingMode(Hexadecimal.CharRenderingMode.values()[charRenderingComboBox.getSelectedIndex()]);
    }//GEN-LAST:event_charRenderingComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bytesPerLineLabel;
    private javax.swing.JSpinner bytesPerLineSpinner;
    private javax.swing.JComboBox<String> charRenderingComboBox;
    private javax.swing.JLabel charRenderingScrollModeLabel;
    private javax.swing.JCheckBox cursorPositionCheckBox;
    private javax.swing.JLabel cursorPositionLabel;
    private javax.swing.JTextField cursorPositionTextField;
    private javax.swing.JCheckBox editableCheckBox;
    private javax.swing.JComboBox<String> horizontalScrollModeComboBox;
    private javax.swing.JLabel horizontalScrollModeLabel;
    private javax.swing.JCheckBox selectionFirstCheckBox;
    private javax.swing.JTextField selectionFirstTextField;
    private javax.swing.JCheckBox selectionLastCheckBox;
    private javax.swing.JTextField selectionLastTextField;
    private javax.swing.JLabel selectionPositionsLabel;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JCheckBox showHeaderCheckBox;
    private javax.swing.JCheckBox showLineNumbersCheckBox;
    private javax.swing.JComboBox<String> verticalScrollModeComboBox;
    private javax.swing.JLabel verticalScrollModeLabel;
    private javax.swing.JComboBox<String> viewModeModeComboBox;
    private javax.swing.JLabel viewModeScrollModeLabel;
    private javax.swing.JCheckBox wrapModeCheckBox;
    // End of variables declaration//GEN-END:variables
}
